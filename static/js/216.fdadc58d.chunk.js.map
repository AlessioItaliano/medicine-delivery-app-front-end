{"version":3,"file":"static/js/216.fdadc58d.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Map/Map.jsx","components/FormOrder/FormOrder.styled.js","components/FormOrder/FormOrder.jsx","components/UserOrderInfo/coordinatesChange.js","components/UserOrderInfo/UserOrderInfo.styled.js","components/UserOrderInfo/UserOrderInfo.jsx","components/UserOrderItem/UserOrderItem.styled.js","components/UserOrderItem/UserOrderItem.jsx","components/UserOrderList/UserOrderList.styled.js","components/UserOrderList/UserOrderList.jsx","pages/ShoppingCart/ShoppingCart.styled.js","pages/ShoppingCart.jsx","redux/order/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 767px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    max-width: 1200px;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => (\n  <s.Section>\n    <s.Container>{children}</s.Container>\n  </s.Section>\n);\n\nexport default Section;\n","import { useState, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport Loader from \"components/Loader\";\n\nconst Map = ({ onCoordinatesChange }) => {\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyAGBDc2zDC74VOpsc7V38JMFe2uZvMrnnM\",\n  });\n\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [hasLoadedPosition, setHasLoadedPosition] = useState(false);\n\n  useEffect(() => {\n    if (!hasLoadedPosition && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userPosition = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          setCurrentPosition(userPosition);\n          onCoordinatesChange(userPosition);\n          setHasLoadedPosition(true);\n        },\n        (error) => {\n          console.error(\"Error getting current position:\", error);\n        }\n      );\n    }\n  }, [hasLoadedPosition, onCoordinatesChange]);\n\n  const handleMarkerDragEnd = (e) => {\n    const newCoordinates = {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n    };\n    setCurrentPosition(newCoordinates);\n    onCoordinatesChange(newCoordinates);\n  };\n\n  return !isLoaded ? (\n    <Loader />\n  ) : (\n    <GoogleMap\n      mapContainerStyle={{ width: \"400px\", height: \"400px\" }}\n      zoom={17}\n      center={currentPosition}\n    >\n      {currentPosition !== null && (\n        <Marker\n          position={currentPosition}\n          title=\"Your Location\"\n          draggable={true}\n          onDragEnd={handleMarkerDragEnd}\n        />\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n","import styled from \"styled-components\";\n\nimport PhoneInput from \"react-phone-number-input\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const InputItem = styled.input`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n\nexport const InputPhone = styled(PhoneInput)`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background-color: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n\n  & input {\n    background-color: transparent;\n    border: none;\n    outline: none;\n    box-shadow: none;\n    padding: 0;\n    font-size: 18px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import { useDispatch } from \"react-redux\";\n// import { login } from \"../../redux/auth/operations\";\nimport { selectUser } from \"../../redux/auth/selectors\";\n// import Button from \"components/Button\";\nimport \"react-phone-number-input/style.css\";\n// import PhoneInput from \"react-phone-number-input\";\n\nimport * as s from \"./FormOrder.styled\";\n\nconst FormOrder = ({ address }) => {\n  const user = useSelector(selectUser);\n\n  const [addressInputValue, setAddressInputValue] = useState(\"\");\n  const [email, setEmail] = useState(user.email || \"\");\n  const [phone, setPhone] = useState(user.phone || \"\");\n  const [name, setName] = useState(user.name || \"\");\n\n  useEffect(() => {\n    if (address) {\n      setAddressInputValue(address);\n    }\n  }, [address]);\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   dispatch(\n  //     login({\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n\n  const handleAddressInputChange = (e) => {\n    setAddressInputValue(e.target.value);\n  };\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePhoneChange = (value) => {\n    // console.log(e.tarhet.value);\n    setPhone(value);\n  };\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <s.Form autoComplete=\"on\">\n      <s.Label>\n        Address\n        <s.InputItem\n          type=\"text\"\n          name=\"address\"\n          autoComplete=\"on\"\n          value={addressInputValue}\n          onChange={handleAddressInputChange}\n        />\n      </s.Label>\n      <s.Label>\n        Email\n        <s.InputItem\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"on\"\n          value={email}\n          onChange={handleEmailChange}\n          placeholder=\"exemple@gmail.com\"\n        />\n      </s.Label>\n      <s.Label>\n        Phone\n        <s.InputPhone\n          international\n          defaultCountry=\"UA\"\n          value={phone}\n          onChange={handlePhoneChange}\n          maxLength={16}\n        />\n      </s.Label>\n      <s.Label>\n        Name\n        <s.InputItem\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"on\"\n          value={name}\n          onChange={handleNameChange}\n          placeholder=\"Your name\"\n        />\n      </s.Label>\n    </s.Form>\n  );\n};\n\nexport default FormOrder;\n","const fetchAddressFromCoordinates = async (coordinate) => {\n  const { lat, lng } = coordinate;\n  const apiKey = \"AIzaSyAGBDc2zDC74VOpsc7V38JMFe2uZvMrnnM\";\n  const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.status === \"OK\") {\n      return data.results[0].formatted_address;\n    } else {\n      console.error(\"Error fetching address:\", data.status);\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching address:\", error);\n    return null;\n  }\n};\n\nexport default fetchAddressFromCoordinates;\n","import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n  height: 80vh;\n\n  padding: 30px;\n  border-radius: 40px;\n  background: radial-gradient(\n    circle farthest-corner at 10% 20%,\n    rgba(37, 145, 251, 0.98) 0.1%,\n    #000780 99.8%\n  );\n\n  // @media screen and (min-width: ${variables.breakpoints.desktop}) {\n  //   flex-direction: row;\n  //   justify-content: center;\n  //   align-items: end;\n  // }\n`;\n\nexport const Box = styled.div`\n  width: 400px;\n  height: 400px;\n`;\n\n// export const Title = styled.h2`\n//   font-size: 22px;\n//   font-weight: 500;\n\n//   color: ${variables.colors.secondary};\n// `;\n\n// export const List = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   gap: 5px;\n\n//   width: 100%;\n// `;\n\n// export const Item = styled.li`\n//   // width: 100%;\n\n//   font-size: 15px;\n//   font-weight: 500;\n\n//   color: ${variables.colors.primary};\n// `;\n\n// export const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   gap: 15px;\n// `;\n\n// export const Input = styled.input`\n//   width: 100%;\n//   padding: 18px 20px;\n//   font-size: 18px;\n\n//   color: ${variables.colors.primary};\n//   background: ${variables.colors.quinary};\n//   border-radius: 18px;\n//   border: 1px solid transparent;\n// `;\n","import React, { useState } from \"react\";\nimport Map from \"components/Map\";\nimport FormOrder from \"components/FormOrder\";\nimport fetchAddressFromCoordinates from \"./coordinatesChange\";\n\nimport * as s from \"./UserOrderInfo.styled\";\n\nconst UserOrderInfo = () => {\n  const [address, setAddress] = useState(null);\n\n  const handleCoordinatesChange = async (newCoordinates) => {\n    const getAddress = await fetchAddressFromCoordinates(newCoordinates);\n    setAddress(getAddress);\n  };\n\n  return (\n    <s.Container>\n      <Map onCoordinatesChange={handleCoordinatesChange} />\n      <FormOrder address={address} />\n    </s.Container>\n  );\n};\n\nexport default UserOrderInfo;\n","import styled from \"styled-components\";\n\nimport noAvaibleImg from \"../../images/noAvaibleImg.png\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 18px;\n  position: relative;\n\n  padding: 10px;\n  width: 100%;\n  height: auto;\n  border-radius: 30px;\n\n  background-color: ${variables.colors.secondary};\n\n  // @media screen and (min-width: ${variables.breakpoints.tablet}) {\n  //   width: 260px;\n  // }\n  // @media screen and (min-width: ${variables.breakpoints.desktop}) {\n  //   width: 306px;\n  // }\n`;\n\nexport const ImageContainer = styled.div`\n  width: 100%;\n  padding-top: 60%;\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n\n  background-image: url(${noAvaibleImg});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Name = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Price = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeFromOrders } from \"../../redux/order/slice\";\nimport { selectOrders } from \"../../redux/order/selectors\";\nimport Button from \"components/Button/Button\";\nimport * as s from \"./UserOrderItem.styled\";\n\nconst UserOrderItem = ({ orderMedicine }) => {\n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrders);\n\n  const { urlToImage, name, price, _id } = orderMedicine;\n\n  const [quantity, setQuantity] = useState(1);\n  // const [totalPrice, setTotalPrice] = useState(price);\n\n  // console.log(totalPrice);\n\n  // useEffect(() => {\n  //   itemTotalPrice(price);\n  // }, [quantity]);\n\n  const handleQuantityChange = (e) => {\n    const newQuantity = parseInt(e.target.value);\n    setQuantity(newQuantity);\n    // setTotalPrice(newQuantity * price);\n  };\n\n  const handleRemove = () => {\n    if (orders.some((order) => order._id === _id)) {\n      console.log(orders.some((order) => order._id === _id));\n      // dispatch(addToOrders(medicine));\n      // }\n      // Створюємо новий масив, який не містить видаляється елемент\n      // const updatedOrders = orders.filter((order) => order._id !== _id);\n      // Оновлюємо стейт orders за допомогою нового масиву\n      dispatch(removeFromOrders(orderMedicine));\n    }\n  };\n\n  return (\n    <s.Container>\n      <s.ImageContainer>\n        <s.Image src={urlToImage} alt=\"Medicine_img\" />\n      </s.ImageContainer>\n      <s.DescriptionContainer>\n        <s.Name>{name}</s.Name>\n        <s.Price>Price: {price} $</s.Price>\n        <s.Input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={quantity}\n          onChange={handleQuantityChange}\n        />\n        <Button func={handleRemove} name=\"Remove\" type=\"button\" />\n      </s.DescriptionContainer>\n    </s.Container>\n  );\n};\n\nexport default UserOrderItem;\n","import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n\n  height: 80vh;\n  overflow-y: auto;\n\n  padding: 30px;\n  border-radius: 40px;\n  background: radial-gradient(\n    circle farthest-corner at 10% 20%,\n    rgba(37, 145, 251, 0.98) 0.1%,\n    #000780 99.8%\n  );\n\n  // @media screen and (min-width: ${variables.breakpoints.desktop}) {\n  //   flex-direction: row;\n  //   justify-content: center;\n  //   align-items: end;\n  // }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n\n  width: 100%;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  flex-grow: 1;\n  color: ${variables.colors.primary};\n`;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectOrders } from \"../../redux/order/selectors\";\n\nimport UserOrderItem from \"components/UserOrderItem\";\nimport * as s from \"./UserOrderList.styled\";\n\nconst UserOrderList = () => {\n  const orders = useSelector(selectOrders);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  console.log(\"Загальна :\", totalPrice);\n\n  const itemTotalPrice = (price) => {\n    setTotalPrice(totalPrice + price);\n  };\n\n  return (\n    <s.Container>\n      {orders.length === 0 ? (\n        <p>You don't have any orders.</p>\n      ) : (\n        <s.List>\n          {orders.map((order) => (\n            <s.Item key={order._id}>\n              <UserOrderItem\n                orderMedicine={order}\n                itemTotalPrice={itemTotalPrice}\n              />\n            </s.Item>\n          ))}\n        </s.List>\n      )}\n    </s.Container>\n  );\n};\n\nexport default UserOrderList;\n","import styled from \"styled-components\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 18px;\n`;\n\nexport const SubmitContainer = styled.div`\n  display: flex;\n  gap: 50px;\n  justify-content: end;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 35px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n","import Section from \"components/Section\";\nimport UserOrderInfo from \"components/UserOrderInfo\";\nimport UserOrderList from \"components/UserOrderList\";\n\nimport * as s from \"./ShoppingCart/ShoppingCart.styled\";\nimport Button from \"components/Button\";\n\nconst onSubmitOrder = (e) => {\n  e.preventDefault();\n};\n\nconst ShoppingCart = () => {\n  return (\n    <>\n      <Section>\n        <s.Container>\n          <UserOrderInfo />\n          <UserOrderList />\n        </s.Container>\n      </Section>\n      <Section>\n        <s.SubmitContainer>\n          <s.Title>Total price: $</s.Title>\n          <Button name=\"Submit\" type=\"submit\" func={onSubmitOrder}></Button>\n        </s.SubmitContainer>\n      </Section>\n    </>\n  );\n};\n\nexport default ShoppingCart;\n","export const selectOrders = (state) => state.orders.orders;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","variables","breakpoints","tablet","desktop","_ref","children","_jsx","s","onCoordinatesChange","isLoaded","useJsApiLoader","id","googleMapsApiKey","currentPosition","setCurrentPosition","useState","hasLoadedPosition","setHasLoadedPosition","useEffect","navigator","geolocation","getCurrentPosition","position","userPosition","lat","coords","latitude","lng","longitude","error","console","GoogleMap","mapContainerStyle","width","height","zoom","center","Marker","title","draggable","onDragEnd","e","newCoordinates","latLng","Loader","Form","form","Label","label","InputItem","input","_templateObject3","colors","primary","quinary","InputPhone","PhoneInput","_templateObject4","address","user","useSelector","selectUser","addressInputValue","setAddressInputValue","email","setEmail","phone","setPhone","name","setName","_jsxs","autoComplete","type","value","onChange","target","placeholder","international","defaultCountry","maxLength","async","coordinate","url","concat","response","fetch","data","json","status","results","formatted_address","UserOrderInfo","setAddress","Map","getAddress","fetchAddressFromCoordinates","FormOrder","secondary","ImageContainer","noAvaibleImg","Image","img","DescriptionContainer","Name","p","_templateObject5","Price","_templateObject6","Input","_templateObject7","orderMedicine","dispatch","useDispatch","orders","selectOrders","urlToImage","price","_id","quantity","setQuantity","src","alt","min","newQuantity","parseInt","Button","func","handleRemove","some","order","log","removeFromOrders","List","ul","Item","li","UserOrderList","totalPrice","setTotalPrice","itemTotalPrice","length","map","UserOrderItem","SubmitContainer","Title","h2","onSubmitOrder","preventDefault","ShoppingCart","_Fragment","state"],"sourceRoot":""}