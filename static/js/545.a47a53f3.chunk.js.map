{"version":3,"file":"static/js/545.a47a53f3.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/SideBar/SideBar.styled.js","components/SideBar/SideBar.jsx","pages/Shop/Shop.styled.js","redux/medicines/selectors.js","components/ShopItem/ShopItem.styled.js","components/ShopItem/ShopItem.jsx","components/ShopList/ShopList.styled.js","components/ShopList/ShopList.jsx","pages/Shop.jsx","redux/order/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 767px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    max-width: 1200px;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => (\n  <s.Section>\n    <s.Container>{children}</s.Container>\n  </s.Section>\n);\n\nexport default Section;\n","import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-aline: center;\n  gap: 18px;\n  height: 80vh;\n\n  padding: 30px;\n  border-radius: 40px;\n  background: radial-gradient(\n    circle farthest-corner at 10% 20%,\n    rgba(37, 145, 251, 0.98) 0.1%,\n    #000780 99.8%\n  );\n`;\n\nexport const Title = styled.h2`\n  font-size: 22px;\n  font-weight: 500;\n\n  color: ${variables.colors.secondary};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  font-size: 15px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n\nexport const PriceContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n`;\n","import { useDispatch } from \"react-redux\";\n\nimport {\n  getMedicinesByType,\n  getMedicinesByPrice,\n  getMedicinesByName,\n} from \"../../redux/medicines/operation\";\n\nimport Button from \"components/Button\";\n\nimport * as s from \"./SideBar.styled\";\n\nconst SideBar = () => {\n  const dispatch = useDispatch();\n\n  const handleSortByType = async (type) => {\n    await dispatch(getMedicinesByType(type));\n  };\n\n  const handleSortByPrice = async (priceDirection) => {\n    await dispatch(getMedicinesByPrice(priceDirection));\n  };\n\n  const handleFindByName = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    console.log(form.elements.medicine.value);\n\n    dispatch(\n      getMedicinesByName({\n        medicine: form.elements.medicine.value,\n      })\n    );\n  };\n  return (\n    <s.Aside>\n      <s.Form onSubmit={handleFindByName} autoComplete=\"on\">\n        <s.Input type=\"text\" name=\"medicine\" placeholder=\"Enter the medicine\" />\n        <Button type={\"submit\"} name={\"Find\"} />\n      </s.Form>\n      <s.Title>Type of medicines:</s.Title>\n      <s.List>\n        <s.Item>\n          <Button\n            type={\"button\"}\n            name={\"Gel\"}\n            func={() => handleSortByType(\"gel\")}\n          />\n        </s.Item>\n        <s.Item>\n          <Button\n            type={\"button\"}\n            name={\"Ointment\"}\n            func={() => handleSortByType(\"ointment\")}\n          />\n        </s.Item>\n        <s.Item>\n          <Button\n            type={\"button\"}\n            name={\"Syrup\"}\n            func={() => handleSortByType(\"syrup\")}\n          />\n        </s.Item>\n        <s.Item>\n          <Button\n            type={\"button\"}\n            name={\"Extract\"}\n            func={() => handleSortByType(\"extract\")}\n          />\n        </s.Item>\n        <s.Item>\n          <Button\n            type={\"button\"}\n            name={\"Elixir\"}\n            func={() => handleSortByType(\"elixir\")}\n          />\n        </s.Item>\n        <s.Item>\n          <Button\n            type={\"button\"}\n            name={\"Emulsion\"}\n            func={() => handleSortByType(\"emulsion\")}\n          />\n        </s.Item>\n        <s.Item>\n          <Button\n            type={\"button\"}\n            name={\"Decoction\"}\n            func={() => handleSortByType(\"decoction\")}\n          />\n        </s.Item>\n      </s.List>\n      <s.Title>Sort by price:</s.Title>\n      <s.PriceContainer>\n        <Button\n          type=\"button\"\n          name={\"High to Low\"}\n          func={() => handleSortByPrice(\"higt\")}\n        />\n        <Button\n          type=\"button\"\n          name={\"Low to High\"}\n          func={() => handleSortByPrice(\"low\")}\n        />\n      </s.PriceContainer>\n    </s.Aside>\n  );\n};\n\nexport default SideBar;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 18px;\n`;\n","export const selectMedicines = (state) => state.medicines.medicines;\nexport const selectIsLoading = (state) => state.medicines.isLoading;\nexport const selectError = (state) => state.medicines.error;\n","import styled from \"styled-components\";\n\nimport noAvaibleImg from \"../../images/noAvaibleImg.png\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  gap: 10px;\n\n  padding: 20px;\n  width: 100%;\n  height: auto;\n  border-radius: 30px;\n\n  background-color: ${variables.colors.secondary};\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    width: 260px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    width: 306px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  width: 100%;\n  padding-top: 60%;\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n\n  background-image: url(${noAvaibleImg});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const Name = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Description = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Price = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Type = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Made = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { addToOrders } from \"../../redux/order/slice\";\nimport { selectOrders } from \"../../redux/order/selectors\";\n\nimport Button from \"components/Button/Button\";\nimport * as s from \"./ShopItem.styled\";\n\nconst ShopItem = ({ medicine }) => {\n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrders);\n\n  const { urlToImage, name, description, made, price, _id } = medicine;\n\n  const handleAdd = () => {\n    if (!orders.some((order) => order._id === _id)) {\n      dispatch(addToOrders(medicine));\n    }\n  };\n\n  return (\n    <s.Container>\n      <s.ImageContainer>\n        <s.Image src={urlToImage} alt=\"Medicine_img\"></s.Image>\n      </s.ImageContainer>\n      <s.Name>{name}</s.Name>\n      <s.Description>{description}</s.Description>\n      <s.Made>Contry: {made}</s.Made>\n      <s.Price>Price: {price} $</s.Price>\n      <Button func={handleAdd} name=\"Add\" type=\"button\" />\n    </s.Container>\n  );\n};\n\nexport default ShopItem;\n","import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n\n  height: 80vh;\n  overflow-y: auto;\n\n  padding: 15px;\n  border-radius: 40px;\n  background: radial-gradient(\n    circle farthest-corner at 10% 20%,\n    rgba(37, 145, 251, 0.98) 0.1%,\n    #000780 99.8%\n  );\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  gap: 18px;\n\n  flex-wrap: wrap;\n  column-count: 1;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    column-count: 2;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    column-count: 3;\n  }\n`;\n\nexport const Item = styled.li``;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectIsLoading,\n  selectMedicines,\n  selectError,\n} from \"../../redux/medicines/selectors\";\n\nimport { getAllMedicines } from \"../../redux/medicines/operation\";\n\nimport ShopItem from \"components/ShopItem\";\nimport Loader from \"components/Loader\";\n\nimport * as s from \"./ShopList.styled\";\n\nconst ShopList = () => {\n  const dispatch = useDispatch();\n\n  const medicines = useSelector(selectMedicines);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getAllMedicines());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error ? (\n        <Loader />\n      ) : (\n        <>\n          <s.Container>\n            <s.List>\n              {medicines.map((medicine) => (\n                <div key={medicine._id}>\n                  <ShopItem medicine={medicine} />\n                </div>\n              ))}\n            </s.List>\n          </s.Container>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ShopList;\n","import Section from \"components/Section\";\nimport SideBar from \"components/SideBar\";\n\nimport * as s from \"./Shop/Shop.styled\";\nimport ShopList from \"components/ShopList\";\n\nconst Home = () => {\n  return (\n    <>\n      <Section>\n        <s.Container>\n          <SideBar />\n          <ShopList />\n        </s.Container>\n      </Section>\n    </>\n  );\n};\n\nexport default Home;\n","export const selectOrders = (state) => state.orders.orders;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","variables","breakpoints","tablet","desktop","_ref","children","_jsx","s","Aside","aside","Title","h2","colors","secondary","List","ul","_templateObject3","Item","li","_templateObject4","primary","Form","form","_templateObject5","Input","input","_templateObject6","quinary","PriceContainer","_templateObject7","SideBar","dispatch","useDispatch","handleSortByType","async","getMedicinesByType","type","handleSortByPrice","getMedicinesByPrice","priceDirection","_jsxs","onSubmit","e","preventDefault","currentTarget","console","log","elements","medicine","value","getMedicinesByName","autoComplete","name","placeholder","Button","func","selectMedicines","state","medicines","selectIsLoading","isLoading","selectError","error","ImageContainer","noAvaibleImg","Image","img","Name","p","Description","Price","Made","_templateObject8","orders","useSelector","selectOrders","urlToImage","description","made","price","_id","src","alt","handleAdd","some","order","addToOrders","ShopList","useEffect","getAllMedicines","_Fragment","Loader","map","ShopItem","Home"],"sourceRoot":""}