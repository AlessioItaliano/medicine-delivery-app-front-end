{"version":3,"file":"static/js/216.6d7fdd10.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Map/Map.jsx","components/FormOrder/FormOrder.styled.js","components/FormOrder/FormOrder.jsx","components/UserOrderInfo/coordinatesChange.js","components/UserOrderInfo/UserOrderInfo.styled.js","components/UserOrderInfo/UserOrderInfo.jsx","components/UserOrderItem/UserOrderItem.styled.js","components/UserOrderItem/UserOrderItem.jsx","components/UserOrderList/UserOrderList.styled.js","components/UserOrderList/UserOrderList.jsx","pages/ShoppingCart/ShoppingCart.styled.js","pages/ShoppingCart.jsx","redux/coupons/selectors.js","redux/order/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 767px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    max-width: 1200px;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => (\n  <s.Section>\n    <s.Container>{children}</s.Container>\n  </s.Section>\n);\n\nexport default Section;\n","import { useState, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport Loader from \"components/Loader\";\n\nconst Map = ({ onCoordinatesChange }) => {\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyAGBDc2zDC74VOpsc7V38JMFe2uZvMrnnM\",\n  });\n\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [hasLoadedPosition, setHasLoadedPosition] = useState(false);\n\n  useEffect(() => {\n    if (!hasLoadedPosition && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userPosition = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          setCurrentPosition(userPosition);\n          onCoordinatesChange(userPosition);\n          setHasLoadedPosition(true);\n        },\n        (error) => {\n          console.error(\"Error getting current position:\", error);\n        }\n      );\n    }\n  }, [hasLoadedPosition, onCoordinatesChange]);\n\n  const handleMarkerDragEnd = (e) => {\n    const newCoordinates = {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n    };\n    setCurrentPosition(newCoordinates);\n    onCoordinatesChange(newCoordinates);\n  };\n\n  return !isLoaded ? (\n    <Loader />\n  ) : (\n    <GoogleMap\n      mapContainerStyle={{ width: \"300px\", height: \"300px\" }}\n      zoom={17}\n      center={currentPosition}\n    >\n      {currentPosition !== null && (\n        <Marker\n          position={currentPosition}\n          title=\"Your Location\"\n          draggable={true}\n          onDragEnd={handleMarkerDragEnd}\n        />\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n","import styled from \"styled-components\";\n\nimport PhoneInput from \"react-phone-number-input\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const InputItem = styled.input`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n\n  border-radius: 3px;\n  border: 1px solid ${variables.colors.accent};\n  background: ${variables.colors.secondary};\n`;\n\nexport const InputPhone = styled(PhoneInput)`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n\n  border-radius: 3px;\n  border: 1px solid ${variables.colors.accent};\n  background: ${variables.colors.secondary};\n\n  & input {\n    background-color: transparent;\n    border: none;\n    outline: none;\n    box-shadow: none;\n    padding: 0;\n    font-size: 18px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectUser } from \"../../redux/auth/selectors\";\n\nimport \"react-phone-number-input/style.css\";\nimport * as s from \"./FormOrder.styled\";\n\nconst FormOrder = ({ address }) => {\n  const user = useSelector(selectUser);\n\n  const [addressInputValue, setAddressInputValue] = useState(\"\");\n  const [email, setEmail] = useState(user.email || \"\");\n  const [phone, setPhone] = useState(user.phone || \"\");\n  const [name, setName] = useState(user.name || \"\");\n\n  useEffect(() => {\n    if (address) {\n      setAddressInputValue(address);\n    }\n  }, [address]);\n\n  const handleAddressInputChange = (e) => {\n    setAddressInputValue(e.target.value);\n  };\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePhoneChange = (value) => {\n    setPhone(value);\n  };\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <s.Form autoComplete=\"on\">\n      <s.Label>\n        Address\n        <s.InputItem\n          type=\"text\"\n          name=\"address\"\n          autoComplete=\"on\"\n          value={addressInputValue}\n          onChange={handleAddressInputChange}\n        />\n      </s.Label>\n      <s.Label>\n        Email\n        <s.InputItem\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"on\"\n          value={email}\n          onChange={handleEmailChange}\n          placeholder=\"exemple@gmail.com\"\n        />\n      </s.Label>\n      <s.Label>\n        Phone\n        <s.InputPhone\n          international\n          defaultCountry=\"UA\"\n          value={phone}\n          onChange={handlePhoneChange}\n          maxLength={16}\n        />\n      </s.Label>\n      <s.Label>\n        Name\n        <s.InputItem\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"on\"\n          value={name}\n          onChange={handleNameChange}\n          placeholder=\"Your name\"\n        />\n      </s.Label>\n    </s.Form>\n  );\n};\n\nexport default FormOrder;\n","const fetchAddressFromCoordinates = async (coordinate) => {\n  const { lat, lng } = coordinate;\n  const apiKey = \"AIzaSyAGBDc2zDC74VOpsc7V38JMFe2uZvMrnnM\";\n  const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.status === \"OK\") {\n      return data.results[0].formatted_address;\n    } else {\n      console.error(\"Error fetching address:\", data.status);\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching address:\", error);\n    return null;\n  }\n};\n\nexport default fetchAddressFromCoordinates;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n\n  padding: 30px;\n`;\n\nexport const Box = styled.div`\n  width: 400px;\n  height: 400px;\n`;\n","import { useState } from \"react\";\nimport Map from \"components/Map\";\nimport FormOrder from \"components/FormOrder\";\nimport fetchAddressFromCoordinates from \"./coordinatesChange\";\n\nimport * as s from \"./UserOrderInfo.styled\";\n\nconst UserOrderInfo = () => {\n  const [address, setAddress] = useState(null);\n\n  const handleCoordinatesChange = async (newCoordinates) => {\n    const getAddress = await fetchAddressFromCoordinates(newCoordinates);\n    setAddress(getAddress);\n  };\n\n  return (\n    <s.Container>\n      <Map onCoordinatesChange={handleCoordinatesChange} />\n      <FormOrder address={address} />\n    </s.Container>\n  );\n};\n\nexport default UserOrderInfo;\n","import styled from \"styled-components\";\n\nimport noAvaibleImg from \"../../images/noAvaibleImg.png\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 10px;\n  position: relative;\n\n  padding: 10px;\n  width: 100%;\n  height: auto;\n\n  border-radius: 5px;\n  background: ${variables.colors.secondary};\n  box-shadow: ${variables.colors.boxShadowSecondary};\n`;\n\nexport const ImageContainer = styled.div`\n  width: 100%;\n  padding-top: 60%;\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n\n  background-image: url(${noAvaibleImg});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  text-align: center;\n`;\n\nexport const Name = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Price = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n\n  border-radius: 3px;\n  border: 1px solid ${variables.colors.accent};\n  background: ${variables.colors.secondary};\n`;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeFromOrders } from \"../../redux/order/slice\";\nimport { selectOrders } from \"../../redux/order/selectors\";\nimport Button from \"components/Button/Button\";\nimport * as s from \"./UserOrderItem.styled\";\n\nconst UserOrderItem = ({ orderMedicine, updateTotalPrice }) => {\n  const dispatch = useDispatch();\n  const orders = useSelector(selectOrders);\n\n  const { urlToImage, name, price, _id } = orderMedicine;\n\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    updateTotalPrice(price * quantity);\n  }, [quantity, updateTotalPrice, price]);\n\n  const handleQuantityChange = (e) => {\n    const newQuantity = parseInt(e.target.value);\n    setQuantity(newQuantity);\n  };\n\n  const handleRemove = () => {\n    if (orders.some((order) => order._id === _id)) {\n      updateTotalPrice(0);\n      dispatch(removeFromOrders(orderMedicine));\n    }\n  };\n\n  return (\n    <s.Container>\n      <s.ImageContainer>\n        <s.Image src={urlToImage} alt=\"Medicine_img\" />\n      </s.ImageContainer>\n      <s.DescriptionContainer>\n        <s.Name>{name}</s.Name>\n        <s.Price>Price: {price} $</s.Price>\n        <s.Input\n          type=\"number\"\n          name=\"quantity\"\n          min=\"1\"\n          value={quantity}\n          onChange={handleQuantityChange}\n        />\n        <Button func={handleRemove} name=\"Remove\" type=\"button\" />\n      </s.DescriptionContainer>\n    </s.Container>\n  );\n};\n\nexport default UserOrderItem;\n","import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n\n  height: 80vh;\n  overflow-y: auto;\n\n  padding: 30px;\n  border-radius: 5px;\n  background: ${variables.colors.secondary};\n  box-shadow: ${variables.colors.boxShadowSecondary};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n\n  width: 100%;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  flex-grow: 1;\n  color: ${variables.colors.primary};\n`;\n\nexport const EmptyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const EmptyWarning = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectOrders } from \"../../redux/order/selectors\";\n\nimport UserOrderItem from \"components/UserOrderItem\";\nimport * as s from \"./UserOrderList.styled\";\n\nconst UserOrderList = ({ shopingTotalPrice }) => {\n  const orders = useSelector(selectOrders);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    shopingTotalPrice(totalPrice);\n  }, [totalPrice, shopingTotalPrice]);\n\n  const updateTotalPrice = (newPrice) => {\n    setTotalPrice((prevTotalPrice) => {\n      if (newPrice > prevTotalPrice) {\n        return prevTotalPrice + (newPrice - prevTotalPrice);\n      } else {\n        return newPrice;\n      }\n    });\n  };\n\n  return (\n    <s.Container>\n      {orders.length === 0 ? (\n        <s.EmptyContainer>\n          <s.EmptyWarning>You don't have any orders.</s.EmptyWarning>{\" \"}\n        </s.EmptyContainer>\n      ) : (\n        <s.List>\n          {orders.map((order) => (\n            <s.Item key={order._id}>\n              <UserOrderItem\n                orderMedicine={order}\n                updateTotalPrice={updateTotalPrice}\n              />\n            </s.Item>\n          ))}\n        </s.List>\n      )}\n    </s.Container>\n  );\n};\n\nexport default UserOrderList;\n","import styled from \"styled-components\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 18px;\n`;\n\nexport const SubmitContainer = styled.div`\n  display: flex;\n  gap: 50px;\n  justify-content: end;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-size: 35px;\n  font-weight: 500;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const DiscountContainer = styled.div``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n\n  border-radius: 3px;\n  border: 1px solid ${variables.colors.accent};\n  background: ${variables.colors.secondary};\n`;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Section from \"components/Section\";\nimport UserOrderInfo from \"components/UserOrderInfo\";\nimport UserOrderList from \"components/UserOrderList\";\nimport Button from \"components/Button\";\nimport Loader from \"components/Loader\";\n\nimport { getCouponById } from \"../redux/coupons/operation\";\nimport { selectDiscount, selectIsLoading } from \"../redux/coupons/selectors\";\nimport { createOrder } from \"../redux/orderHistory/operation\";\nimport { selectOrders } from \"../redux/order/selectors\";\n\nimport * as s from \"./ShoppingCart/ShoppingCart.styled\";\n\nconst ShoppingCart = () => {\n  const dispatch = useDispatch();\n\n  const discount = useSelector(selectDiscount);\n  const isLoading = useSelector(selectIsLoading);\n  const orders = useSelector(selectOrders);\n\n  const [price, setPrice] = useState(0);\n  const [discountPrice, setDiscountPrice] = useState(0);\n  const [valueInput, setValueInput] = useState(\"\");\n\n  useEffect(() => {\n    if (discount !== null && discount !== 0) {\n      const newPrice = price - (price * discount) / 100;\n      setDiscountPrice(newPrice);\n    }\n  }, [discount, setDiscountPrice, price]);\n\n  const onSubmitOrder = (e) => {\n    e.preventDefault();\n\n    const orderShopPrice = discountPrice ? discountPrice : price;\n    const orderShopList = orders.map((order) => order._id);\n\n    dispatch(\n      createOrder({\n        totalPrice: orderShopPrice,\n        orderList: orderShopList,\n      })\n    );\n  };\n\n  const shopingTotalPrice = (newPrice) => {\n    setPrice(newPrice);\n  };\n\n  const onReadDiscount = (e) => {\n    e.preventDefault();\n    dispatch(getCouponById(String(valueInput)));\n  };\n\n  const handleDiscountInputChange = (e) => {\n    setValueInput(e.target.value);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Section>\n            <s.Container>\n              <UserOrderInfo />\n              <UserOrderList shopingTotalPrice={shopingTotalPrice} />\n            </s.Container>\n          </Section>\n          <Section>\n            <s.SubmitContainer>\n              <s.DiscountContainer>\n                <s.Form onSubmit={onReadDiscount}>\n                  <s.Input\n                    type=\"text\"\n                    name=\"discount\"\n                    value={valueInput}\n                    onChange={handleDiscountInputChange}\n                    autoComplete=\"off\"\n                    placeholder=\"Put your discount here\"\n                  />\n                  <Button\n                    name=\"Read\"\n                    type=\"submit\"\n                    disabled={!valueInput.trim()}\n                  />\n                </s.Form>\n              </s.DiscountContainer>\n\n              {discountPrice ? (\n                <s.Title>Price with discount: {discountPrice} $</s.Title>\n              ) : (\n                <s.Title>Total price: {price} $</s.Title>\n              )}\n              <Button\n                name=\"Submit\"\n                type=\"submit\"\n                func={onSubmitOrder}\n                disabled={orders.length === 0 ? true : false}\n              ></Button>\n            </s.SubmitContainer>\n          </Section>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ShoppingCart;\n","export const selectCoupons = (state) => state.coupons.coupons;\nexport const selectDiscount = (state) => state.coupons.discount;\nexport const selectIsLoading = (state) => state.coupons.isLoading;\nexport const selectError = (state) => state.coupons.error;\n","export const selectOrders = (state) => state.orders.orders;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","variables","breakpoints","tablet","desktop","_ref","children","_jsx","s","onCoordinatesChange","isLoaded","useJsApiLoader","id","googleMapsApiKey","currentPosition","setCurrentPosition","useState","hasLoadedPosition","setHasLoadedPosition","useEffect","navigator","geolocation","getCurrentPosition","position","userPosition","lat","coords","latitude","lng","longitude","error","console","GoogleMap","mapContainerStyle","width","height","zoom","center","Marker","title","draggable","onDragEnd","e","newCoordinates","latLng","Loader","Form","form","Label","label","InputItem","input","_templateObject3","colors","primary","accent","secondary","InputPhone","PhoneInput","_templateObject4","address","user","useSelector","selectUser","addressInputValue","setAddressInputValue","email","setEmail","phone","setPhone","name","setName","_jsxs","autoComplete","type","value","onChange","target","placeholder","international","defaultCountry","maxLength","async","coordinate","url","concat","response","fetch","data","json","status","results","formatted_address","UserOrderInfo","setAddress","Map","getAddress","fetchAddressFromCoordinates","FormOrder","boxShadowSecondary","ImageContainer","noAvaibleImg","Image","img","DescriptionContainer","Name","p","_templateObject5","Price","_templateObject6","Input","_templateObject7","orderMedicine","updateTotalPrice","dispatch","useDispatch","orders","selectOrders","urlToImage","price","_id","quantity","setQuantity","src","alt","min","newQuantity","parseInt","Button","func","handleRemove","some","order","removeFromOrders","List","ul","Item","li","EmptyContainer","EmptyWarning","shopingTotalPrice","totalPrice","setTotalPrice","newPrice","prevTotalPrice","length","map","UserOrderItem","SubmitContainer","Title","h2","DiscountContainer","ShoppingCart","discount","selectDiscount","isLoading","selectIsLoading","setPrice","discountPrice","setDiscountPrice","valueInput","setValueInput","_Fragment","UserOrderList","onSubmit","preventDefault","getCouponById","String","disabled","trim","orderShopPrice","orderShopList","createOrder","orderList","selectCoupons","state","coupons","selectError"],"sourceRoot":""}