{"version":3,"file":"static/js/152.120ab00b.chunk.js","mappings":"oMAIO,MAAMA,EAAUC,EAAAA,GAAOC,QAAOC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8BAIxBC,EAAYJ,EAAAA,GAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qQAODI,EAAAA,EAAUC,YAAYC,OAGtBF,EAAAA,EAAUC,YAAYE,S,aChBxD,MAMA,EANgBC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC3BE,EAAAA,EAAAA,KAACC,EAAS,CAAAF,UACRC,EAAAA,EAAAA,KAACC,EAAW,CAAAF,SAAEA,KACJ,C,sICCP,MAAMG,EAAOf,EAAAA,GAAOgB,KAAId,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAOlBc,EAAQjB,EAAAA,GAAOkB,MAAKZ,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8GAQpBgB,EAAQnB,EAAAA,GAAOoB,MAAKC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,oKAKtBI,EAAAA,EAAUe,OAAOC,QACZhB,EAAAA,EAAUe,OAAOE,SAKpBC,GAAazB,EAAAA,EAAAA,IAAO0B,EAAAA,GAAP1B,CAAkB2B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,uUAKjCI,EAAAA,EAAUe,OAAOC,QACNhB,EAAAA,EAAUe,OAAOE,S,aC9BvC,MAqDA,EArDqBI,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAqBnC,OACEC,EAAAA,EAAAA,MAACpB,EAAM,CAACqB,SAhBYC,IACpBA,EAAEC,iBACF,MAAMrB,EAAOoB,EAAEE,cAEfT,GACEU,EAAAA,EAAAA,IAAS,CACPC,KAAMxB,EAAKyB,SAASD,KAAKE,MACzBC,MAAO3B,EAAKyB,SAASE,MAAMD,MAC3BE,SAAU5B,EAAKyB,SAASG,SAASF,MACjCX,MAAOA,KAGXf,EAAK6B,OAAO,EAIoBC,aAAa,KAAIlC,SAAA,EAC/CsB,EAAAA,EAAAA,MAACpB,EAAO,CAAAF,SAAA,CAAC,YAEPC,EAAAA,EAAAA,KAACC,EAAO,CAACiC,KAAK,OAAOP,KAAK,OAAOQ,UAAQ,EAACF,aAAa,WAEzDZ,EAAAA,EAAAA,MAACpB,EAAO,CAAAF,SAAA,CAAC,SAEPC,EAAAA,EAAAA,KAACC,EAAY,CACXmC,eAAa,EACbC,eAAe,KACfV,KAAK,QACLE,MAAOX,EACPoB,SAhCmBT,IACzBV,EAASU,EAAM,EAgCTU,UAAW,SAGflB,EAAAA,EAAAA,MAACpB,EAAO,CAAAF,SAAA,CAAC,SAEPC,EAAAA,EAAAA,KAACC,EAAO,CAACiC,KAAK,QAAQP,KAAK,QAAQQ,UAAQ,EAACF,aAAa,WAE3DZ,EAAAA,EAAAA,MAACpB,EAAO,CAAAF,SAAA,CAAC,YAEPC,EAAAA,EAAAA,KAACC,EAAO,CAACiC,KAAK,WAAWP,KAAK,WAAWQ,UAAQ,EAACF,aAAa,WAEjEjC,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAACN,KAAM,SAAUP,KAAM,eACvB,E,aCtDb,MAQA,EARiBc,KAEbzC,EAAAA,EAAAA,KAACd,EAAAA,EAAO,CAAAa,UACNC,EAAAA,EAAAA,KAACe,EAAY,K","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/FormRegister/FormRegister.styled.js","components/FormRegister/FormRegister.jsx","pages/Register.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 767px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    max-width: 1200px;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => (\n  <s.Section>\n    <s.Container>{children}</s.Container>\n  </s.Section>\n);\n\nexport default Section;\n","import styled from \"styled-components\";\n\nimport PhoneInput from \"react-phone-number-input\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n`;\n\nexport const InputPhone = styled(PhoneInput)`\n  width: 350px;\n  padding: 18px 20px;\n  font-size: 18px;\n\n  color: ${variables.colors.primary};\n  background-color: ${variables.colors.quinary};\n  border-radius: 18px;\n  border: 1px solid transparent;\n\n  & input {\n    background-color: transparent;\n    border: none;\n    outline: none;\n    box-shadow: none;\n    padding: 0;\n    font-size: 18px;\n  }\n`;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/operations\";\n\nimport Button from \"components/Button\";\nimport \"react-phone-number-input/style.css\";\nimport * as s from \"./FormRegister.styled\";\n\nconst FormRegister = () => {\n  const dispatch = useDispatch();\n  const [phone, setPhone] = useState(\"\");\n\n  const handlePhoneChange = (value) => {\n    setPhone(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n        phone: phone,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <s.Form onSubmit={handleSubmit} autoComplete=\"on\">\n      <s.Label>\n        Username\n        <s.Input type=\"text\" name=\"name\" required autoComplete=\"on\" />\n      </s.Label>\n      <s.Label>\n        Phone\n        <s.InputPhone\n          international\n          defaultCountry=\"UA\"\n          name=\"phone\"\n          value={phone}\n          onChange={handlePhoneChange}\n          maxLength={16}\n        />\n      </s.Label>\n      <s.Label>\n        Email\n        <s.Input type=\"email\" name=\"email\" required autoComplete=\"on\" />\n      </s.Label>\n      <s.Label>\n        Password\n        <s.Input type=\"password\" name=\"password\" required autoComplete=\"on\" />\n      </s.Label>\n      <Button type={\"submit\"} name={\"Register\"} />\n    </s.Form>\n  );\n};\n\nexport default FormRegister;\n","import FormRegister from \"components/FormRegister\";\nimport Section from \"components/Section\";\n\nconst Register = () => {\n  return (\n    <Section>\n      <FormRegister />\n    </Section>\n  );\n};\n\nexport default Register;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","variables","breakpoints","tablet","desktop","_ref","children","_jsx","s","Form","form","Label","label","Input","input","_templateObject3","colors","primary","quinary","InputPhone","PhoneInput","_templateObject4","FormRegister","dispatch","useDispatch","phone","setPhone","useState","_jsxs","onSubmit","e","preventDefault","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","required","international","defaultCountry","onChange","maxLength","Button","Register"],"sourceRoot":""}