{"version":3,"file":"static/js/461.7715a1fe.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","redux/orderHistory/selectors.js","components/HistoryItem/HistoryItem.styled.js","components/HistoryItem/HistoryItem.jsx","components/HistoryList/HistoryList.styled.js","components/HistoryList/HistoryList.jsx","pages/History.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Section = styled.section`\n  padding: 20px 0;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 767px;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    min-width: 768px;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    max-width: 1200px;\n  }\n`;\n","import * as s from './Section.styled';\n\nconst Section = ({ children }) => (\n  <s.Section>\n    <s.Container>{children}</s.Container>\n  </s.Section>\n);\n\nexport default Section;\n","export const selectOrdersHistory = (state) => state.orderHistory.orderHistory;\nexport const selectIsLoading = (state) => state.orderHistory.isLoading;\nexport const selectError = (state) => state.orderHistory.error;\n","import styled from \"styled-components\";\n\nimport noAvaibleImg from \"../../images/noAvaibleImg.png\";\n\nimport { variables } from \"stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 18px;\n  position: relative;\n  text-align: center;\n  align-items: center;\n\n  padding: 10px;\n  width: 100%;\n  height: auto;\n  border-radius: 30px;\n\n  background-color: ${variables.colors.secondary};\n`;\nexport const OrderMedicinesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 200px;\n  padding-top: 60%;\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n\n  background-image: url(${noAvaibleImg});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 12px;\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  text-align: center;\n  overflow-y: auto;\n`;\n\nexport const Description = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n\n  color: ${variables.colors.primary};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 250px;\n  overflow: auto;\n  gap: 18px;\n\n  flex-wrap: wrap;\n  overflow: scroll;\n`;\n\nexport const Item = styled.li`\n  color: ${variables.colors.primary};\n`;\n","import { format } from \"date-fns\";\nimport * as s from \"./HistoryItem.styled\";\n\nconst HistoryItem = ({ order }) => {\n  const { totalPrice, orderList, createdAt } = order;\n\n  const formattedDate = format(new Date(createdAt), \"dd-MM-yyyy HH:mm:ss\");\n\n  return (\n    <s.Container>\n      <s.OrderMedicinesContainer>\n        <s.List>\n          {orderList.map((order) => (\n            <s.Item key={order._id}>\n              <s.ImageContainer>\n                <s.Image src={order.urlToImage} alt=\"coupon_img\" />\n              </s.ImageContainer>\n              <s.DescriptionContainer>\n                <s.Description>{order.name}</s.Description>\n                <s.Description>Price:{order.price}</s.Description>\n              </s.DescriptionContainer>\n            </s.Item>\n          ))}\n        </s.List>\n      </s.OrderMedicinesContainer>\n      <div>\n        <s.Description>Total price: {totalPrice}</s.Description>\n        <s.Description>Order date: {formattedDate}</s.Description>\n      </div>\n    </s.Container>\n  );\n};\n\nexport default HistoryItem;\n","import styled from \"styled-components\";\n\nimport { variables } from \"../../stylesheet/variables\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 18px;\n\n  height: 80vh;\n  overflow-y: auto;\n\n  padding: 30px;\n  border-radius: 40px;\n  background: radial-gradient(\n    circle farthest-corner at 10% 20%,\n    rgba(37, 145, 251, 0.98) 0.1%,\n    #000780 99.8%\n  );\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 18px;\n  flex-wrap: wrap;\n  column-count: 1;\n\n  @media screen and (min-width: ${variables.breakpoints.tablet}) {\n    column-count: 2;\n  }\n  @media screen and (min-width: ${variables.breakpoints.desktop}) {\n    column-count: 3;\n  }\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  color: ${variables.colors.primary};\n`;\n\nexport const EmptyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const EmptyWarning = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n\n  color: ${variables.colors.secondary};\n`;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectOrdersHistory,\n  selectIsLoading,\n  selectError,\n} from \"../../redux/orderHistory/selectors\";\nimport { getUserOrder } from \"../../redux/orderHistory/operation\";\n\nimport HistoryItem from \"components/HistoryItem\";\n\nimport * as s from \"./HistoryList.styled\";\n\nconst HistoryList = () => {\n  const dispatch = useDispatch();\n\n  const orders = useSelector(selectOrdersHistory);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getUserOrder());\n  }, [dispatch]);\n\n  return (\n    <s.Container>\n      {isLoading && !error ? (\n        <s.EmptyContainer>\n          <s.EmptyWarning>You don't have any history.</s.EmptyWarning>\n        </s.EmptyContainer>\n      ) : (\n        <s.List>\n          {orders.map((order) => (\n            <s.Item key={order._id}>\n              <HistoryItem order={order} />\n            </s.Item>\n          ))}\n        </s.List>\n      )}\n    </s.Container>\n  );\n};\n\nexport default HistoryList;\n","import Section from \"components/Section\";\nimport HistoryList from \"components/HistoryList\";\n\nconst History = () => {\n  return (\n    <>\n      <Section>\n        <HistoryList />\n      </Section>\n    </>\n  );\n};\n\nexport default History;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","variables","breakpoints","tablet","desktop","_ref","children","_jsx","s","selectOrdersHistory","state","orderHistory","selectIsLoading","isLoading","selectError","error","colors","secondary","OrderMedicinesContainer","ImageContainer","_templateObject3","noAvaibleImg","Image","img","_templateObject4","DescriptionContainer","_templateObject5","Description","p","_templateObject6","primary","List","ul","_templateObject7","Item","li","_templateObject8","order","totalPrice","orderList","createdAt","formattedDate","format","Date","_jsxs","map","src","urlToImage","alt","name","price","_id","EmptyContainer","EmptyWarning","HistoryList","dispatch","useDispatch","orders","useSelector","useEffect","getUserOrder","HistoryItem","History","_Fragment"],"sourceRoot":""}